{
  // Place your advent-of-code workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  "advent of code task boilerplate code": {
    "prefix": "advent of code task",
    "body": [
      "// Advent of code ${1:year} -- Filename : $TM_FILENAME",
      "// Created by Theo Clapperton",
      "// Started @ $CURRENT_YEAR-$CURRENT_MONTH-$CURRENT_DATE $CURRENT_HOUR:$CURRENT_MINUTE:$CURRENT_SECOND",
      "",
      "const { inputToArray } = require(\"../../common/common\");",
      "",
      "const _REALinput = inputToArray(\"../${1:year}/task ${2:taskNo}/input.txt\", \"${3:separator}\");",
      "",
      "const _TESTinput = [];",
      "",
      "const part1 = (input) => {",
      "\t// part 1",
      "\t$0",
      "\treturn 0;",
      "}",
      "",
      "const part2 = (input) => {",
      "\t// part 2",
      "\t",
      "\treturn 0;",
      "}",
      "",
      "",
      "console.log({task: 1, value: part1(_REALinput)});",
      "console.log({task: 2, value: part2(_REALinput)});"
    ],
    "description": "advent of code task boilerplate code"
  }
}
